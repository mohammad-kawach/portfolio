const ContactForm = () => {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [message, setMessage] = useState('');

  // Handle form submission
  const handleSubmit = (e) => {
    e.preventDefault();

    // TODO: Add your email service details and template ID here
    const serviceId = 'YOUR_SERVICE_ID';
    const templateId = 'YOUR_TEMPLATE_ID';
    const userId = 'YOUR_USER_ID';

    // Prepare the email parameters
    const emailParams = {
      service_id: serviceId,
      template_id: templateId,
      user_id: userId,
      template_params: {
        name: name,
        email: email,
        message: message,
      },
    };

    // Send the email using emailjs library
    emailjs.send('default_service', 'template_name', emailParams)
      .then((response) => {
        console.log('Email sent successfully!', response);
        // TODO: Add your success message or redirect logic here
      })
      .catch((error) => {
        console.error('Error sending email:', error);
        // TODO: Add your error handling logic here
      });

    // Reset the form fields
    setName('');
    setEmail('');
    setMessage('');
  };

  // Handle form field changes
  const handleNameChange = (e) => {
    setName(e.target.value);
  };

  const handleEmailChange = (e) => {
    setEmail(e.target.value);
  };

  const handleMessageChange = (e) => {
    setMessage(e.target.value);
  };

  return (
    <form onSubmit={handleSubmit}>
      <div>
        <label>Name:</label>
        <input type="text" value={name} onChange={handleNameChange} />
      </div>
      <div>
        <label>Email:</label>
        <input type="email" value={email} onChange={handleEmailChange} />
      </div>
      <div>
        <label>Message:</label>
        <textarea value={message} onChange={handleMessageChange} />
      </div>
      <button type="submit">Send</button>
    </form>
  );
};

export default ContactForm;